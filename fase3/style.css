let board = null;
let game = new Chess();

const updateStatus = () => {
    let status = '';

    if (game.in_checkmate()) {
        status = 'Fim de jogo, xeque-mate!';
    } else if (game.in_draw()) {
        status = 'Fim de jogo, empate!';
    } else {
        status = `Jogador: ${game.turn() === 'w' ? 'IndÃ­genas' : 'Portugueses'}`;
        if (game.in_check()) {
            status += ', xeque!';
        }
    }

    document.getElementById('status').textContent = status;
};

const onDragStart = (source, piece, position, orientation) => {
    if (game.in_checkmate() === true || game.in_draw() === true || piece.search(/^b/) !== -1) {
        return false;
    }
};

const makeRandomMove = () => {
    const possibleMoves = game.moves();

    if (possibleMoves.length === 0) return;

    const randomIndex = Math.floor(Math.random() * possibleMoves.length);
    game.move(possibleMoves[randomIndex]);
    board.position(game.fen());
    updateStatus();
};

const onDrop = (source, target) => {
    const move = game.move({
        from: source,
        to: target,
        promotion: 'q' // always promote to a queen for simplicity
    });

    if (move === null) return 'snapback';

    window.setTimeout(makeRandomMove, 250);
    updateStatus();
};

const onSnapEnd = () => {
    board.position(game.fen());
};

const cfg = {
    draggable: true,
    position: 'start',
    onDragStart: onDragStart,
    onDrop: onDrop,
    onSnapEnd: onSnapEnd,
    pieceTheme: 'images/{piece}.png' // Custom pieces
};

board = Chessboard('board', cfg);

document.getElementById('reset-button').addEventListener('click', () => {
    game.reset();
    board.start();
    updateStatus();
});

updateStatus();
